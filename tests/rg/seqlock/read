global var x:
_L: (z % 2) == 0

global var z:
_L: TRUE

local var r1:
local var r2:

global var output:
_L: TRUE

_Gamma_0: r1 -> LOW, r2 -> LOW
_Rely: z' >= z
// I'm not sure that the guarantee of Gamma_x is stable under R
// _Guar: Gamma_x && (z' == z)
_Guar: (z' == z)

do
// _invariant: Gamma_r1
_invariant: Gamma_r1 && ((z == r1) => Gamma_r2)
{
	do
	_invariant: Gamma_r1
	{
		r1 = z;
	} while (r1 % 2 != 0)

	r2 = x;
} while (z != r1)

output = r2;
